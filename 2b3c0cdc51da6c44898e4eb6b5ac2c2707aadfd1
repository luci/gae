{
  "comments": [
    {
      "key": {
        "uuid": "ca9f3c6d_7e2940ed",
        "filename": "service/datastore/checkfilter.go",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 1114919
      },
      "writtenOn": "2020-05-31T00:55:36Z",
      "side": 1,
      "message": "fwiw, I\u0027d bet this additional callback is what\u0027ll be the costliest perf-wise, and it\u0027ll apply in prod even if all keys are valid.",
      "range": {
        "startLine": 77,
        "startChar": 46,
        "endLine": 77,
        "endChar": 50
      },
      "revId": "2b3c0cdc51da6c44898e4eb6b5ac2c2707aadfd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "305b44b9_9533eefc",
        "filename": "service/datastore/checkfilter.go",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 1114919
      },
      "writtenOn": "2020-05-31T00:55:36Z",
      "side": 1,
      "message": "is it important to require GetMulti to potentially callback out of order?",
      "range": {
        "startLine": 77,
        "startChar": 51,
        "endLine": 77,
        "endChar": 58
      },
      "revId": "2b3c0cdc51da6c44898e4eb6b5ac2c2707aadfd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efad5b27_f5d311e9",
        "filename": "service/datastore/checkfilter.go",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-06-01T18:38:41Z",
      "side": 1,
      "message": "There may be multiple layers of this, with some of the items removed at each layer. While it\u0027s not required to be able to call out of order, it is required to call with gaps.\n\nOriginally the thought was that making HUGE calls to GetMulti when the original user really wants to process them as a \"stream\", would require allocating large intermediate slices, where the callback method would not. I\u0027m not convinced this is actually important though, since slices of pointers don\u0027t really take much space at all.\n\nIn any event, this would be a lot of work to change at this point.",
      "parentUuid": "305b44b9_9533eefc",
      "range": {
        "startLine": 77,
        "startChar": 51,
        "endLine": 77,
        "endChar": 58
      },
      "revId": "2b3c0cdc51da6c44898e4eb6b5ac2c2707aadfd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "391ee5f1_b8c18164",
        "filename": "service/datastore/checkfilter.go",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1114919
      },
      "writtenOn": "2020-05-31T00:55:36Z",
      "side": 1,
      "message": "btw, why have these early exists here and on 137? It obscures the code for sure, yet doesn\u0027t seem to be useful in actual prod.\nAlso, I\u0027m surprised L119 check isn\u0027t done first.",
      "range": {
        "startLine": 116,
        "startChar": 1,
        "endLine": 118,
        "endChar": 2
      },
      "revId": "2b3c0cdc51da6c44898e4eb6b5ac2c2707aadfd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da5bb5b3_aee611f3",
        "filename": "service/datastore/checkfilter.go",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-06-01T18:38:41Z",
      "side": 1,
      "message": "yeah you\u0027re right, I can remove this check now. previously \u0027keys\u0027 wouldn\u0027t shrink",
      "parentUuid": "391ee5f1_b8c18164",
      "range": {
        "startLine": 116,
        "startChar": 1,
        "endLine": 118,
        "endChar": 2
      },
      "revId": "2b3c0cdc51da6c44898e4eb6b5ac2c2707aadfd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c83e5d9_e682f791",
        "filename": "service/datastore/dropped_arg_tracker.go",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1114919
      },
      "writtenOn": "2020-05-31T00:44:55Z",
      "side": 1,
      "message": "I think this is a pretty good interview question ðŸ˜Š At least it\u0027s trivial to explain.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 53,
        "endChar": 25
      },
      "revId": "2b3c0cdc51da6c44898e4eb6b5ac2c2707aadfd1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}