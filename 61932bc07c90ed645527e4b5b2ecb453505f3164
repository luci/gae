{
  "comments": [
    {
      "key": {
        "uuid": "c44b9b82_ef553933",
        "filename": "service/datastore/query.go",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-05-12T22:41:23Z",
      "side": 1,
      "message": "This is hurting my brain a bit. \n\nThis bit is a mechanism for ancestor queries (which are strongly consistent by default) to elect to be eventually consistent.\n\nWith the new logic in this CL, the query will be marked as eventually consistent if:\n\n  !q.firestoreMode || (q.eventualConsistency \u0026\u0026 q.ancestor \u003d\u003d nil)\n\nWhich means that ~all existing transactions (including ancestor transactions) will be made eventually consistent.\n\nI think this should be\n\n  q.eventualConsistency || (!q.firestoreMode \u0026\u0026 ancestor \u003d\u003d nil)\n\nSemantically, I think this is:\n\n  The query is eventually consistent if the user has opted-in to eventual consistency, OR if the query is a datastore query without an ancestor set.\n\nDoes that match your understanding?",
      "range": {
        "startLine": 594,
        "startChar": 2,
        "endLine": 594,
        "endChar": 22
      },
      "revId": "61932bc07c90ed645527e4b5b2ecb453505f3164",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63f33ed3_578945b8",
        "filename": "service/datastore/query.go",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1395809
      },
      "writtenOn": "2020-05-12T22:56:20Z",
      "side": 1,
      "message": "In Firestore Mode - all queries are strongly consistent. There is no option to make queries eventually consistent. In firestoremode, user cannot make/opt-in the queries to be eventually consistent. Thats my understanding. \n\nIf firestoremode is ON, we ignore eventualConsistency bit.\nIf firestoremode is OFF, we stick to the old condition before this CL.\n\nMaybe instead of naming transactionSafe, we just name is getEventualConsistency() and remove all the negations to keep it simple.",
      "parentUuid": "c44b9b82_ef553933",
      "range": {
        "startLine": 594,
        "startChar": 2,
        "endLine": 594,
        "endChar": 22
      },
      "revId": "61932bc07c90ed645527e4b5b2ecb453505f3164",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e269dc94_ec712741",
        "filename": "service/datastore/query.go",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2020-05-12T23:11:52Z",
      "side": 1,
      "message": "\u003e\u003e\u003e Which means that ~all existing transactions (including ancestor transactions) will be made eventually consistent.\n\nwhy? their firestoreMode is false, so their eventuallyConsistent is set as the same as before, which \u003d (q.eventualConsistency \u0026\u0026 q.ancestor \u003d\u003d nil)\n\nI think in firestoremode, users won\u0027t be allowed to specify eventualConsistency\u003dtrue as it cannot be true anyway.\n\nI agree that we rename it back to getEventualConsistency...as it\u0027s hard to understanding !...",
      "parentUuid": "63f33ed3_578945b8",
      "range": {
        "startLine": 594,
        "startChar": 2,
        "endLine": 594,
        "endChar": 22
      },
      "revId": "61932bc07c90ed645527e4b5b2ecb453505f3164",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76ebbb27_0e32b6c8",
        "filename": "service/datastore/query.go",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1001907
      },
      "writtenOn": "2020-05-12T23:16:29Z",
      "side": 1,
      "message": "Argh, I got mixed up with the inversions and the function call (didn\u0027t properly apply DeMorgan\u0027s); You\u0027re right that this would expand to\n\n   !firestoreMode \u0026\u0026 (eventuallyConsistent || ancestor \u003d\u003d nil)\n\nSo this is right (and I had a typo in my original comment) :)",
      "parentUuid": "e269dc94_ec712741",
      "range": {
        "startLine": 594,
        "startChar": 2,
        "endLine": 594,
        "endChar": 22
      },
      "revId": "61932bc07c90ed645527e4b5b2ecb453505f3164",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aae21c4f_83e72abe",
        "filename": "service/datastore/query.go",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 1142534
      },
      "writtenOn": "2020-05-13T00:19:04Z",
      "side": 1,
      "message": "rename it to getEventualConsistency to avoid confusion :)",
      "parentUuid": "76ebbb27_0e32b6c8",
      "range": {
        "startLine": 594,
        "startChar": 2,
        "endLine": 594,
        "endChar": 22
      },
      "revId": "61932bc07c90ed645527e4b5b2ecb453505f3164",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}